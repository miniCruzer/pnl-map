# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui\mapconfig.ui'
#
# Created by: PyQt5 UI code generator 5.9.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MapConfig(object):
    def setupUi(self, MapConfig):
        MapConfig.setObjectName("MapConfig")
        MapConfig.resize(861, 394)
        self.verticalLayout = QtWidgets.QVBoxLayout(MapConfig)
        self.verticalLayout.setObjectName("verticalLayout")
        self.dialogLayout = QtWidgets.QHBoxLayout()
        self.dialogLayout.setObjectName("dialogLayout")
        self.srcGroupBox = QtWidgets.QGroupBox(MapConfig)
        self.srcGroupBox.setObjectName("srcGroupBox")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.srcGroupBox)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.srcKeyGroupBox = QtWidgets.QGroupBox(self.srcGroupBox)
        self.srcKeyGroupBox.setObjectName("srcKeyGroupBox")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.srcKeyGroupBox)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.srcKeyVLayout = QtWidgets.QVBoxLayout()
        self.srcKeyVLayout.setObjectName("srcKeyVLayout")
        self.srcKeyList = QtWidgets.QListWidget(self.srcKeyGroupBox)
        self.srcKeyList.setDragEnabled(True)
        self.srcKeyList.setObjectName("srcKeyList")
        self.srcKeyVLayout.addWidget(self.srcKeyList)
        self.srcKeyHLayout = QtWidgets.QHBoxLayout()
        self.srcKeyHLayout.setObjectName("srcKeyHLayout")
        self.addSrcKeyButton = QtWidgets.QPushButton(self.srcKeyGroupBox)
        self.addSrcKeyButton.setObjectName("addSrcKeyButton")
        self.srcKeyHLayout.addWidget(self.addSrcKeyButton)
        self.delSrcKeyButton = QtWidgets.QPushButton(self.srcKeyGroupBox)
        self.delSrcKeyButton.setObjectName("delSrcKeyButton")
        self.srcKeyHLayout.addWidget(self.delSrcKeyButton)
        self.srcKeyVLayout.addLayout(self.srcKeyHLayout)
        self.gridLayout_2.addLayout(self.srcKeyVLayout, 0, 0, 1, 1)
        self.horizontalLayout.addWidget(self.srcKeyGroupBox)
        self.sourceDataGroupBox = QtWidgets.QGroupBox(self.srcGroupBox)
        self.sourceDataGroupBox.setObjectName("sourceDataGroupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.sourceDataGroupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.srcDataVLayout = QtWidgets.QVBoxLayout()
        self.srcDataVLayout.setObjectName("srcDataVLayout")
        self.srcDataList = QtWidgets.QListWidget(self.sourceDataGroupBox)
        self.srcDataList.setDragEnabled(True)
        self.srcDataList.setObjectName("srcDataList")
        self.srcDataVLayout.addWidget(self.srcDataList)
        self.srcDataHLayout = QtWidgets.QHBoxLayout()
        self.srcDataHLayout.setObjectName("srcDataHLayout")
        self.addSrcDataButton = QtWidgets.QPushButton(self.sourceDataGroupBox)
        self.addSrcDataButton.setObjectName("addSrcDataButton")
        self.srcDataHLayout.addWidget(self.addSrcDataButton)
        self.delSrcDataButton = QtWidgets.QPushButton(self.sourceDataGroupBox)
        self.delSrcDataButton.setObjectName("delSrcDataButton")
        self.srcDataHLayout.addWidget(self.delSrcDataButton)
        self.srcDataVLayout.addLayout(self.srcDataHLayout)
        self.gridLayout.addLayout(self.srcDataVLayout, 0, 0, 1, 1)
        self.horizontalLayout.addWidget(self.sourceDataGroupBox)
        self.dialogLayout.addWidget(self.srcGroupBox)
        self.dstGroupBox = QtWidgets.QGroupBox(MapConfig)
        self.dstGroupBox.setObjectName("dstGroupBox")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.dstGroupBox)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.dstKeyGroupBox = QtWidgets.QGroupBox(self.dstGroupBox)
        self.dstKeyGroupBox.setObjectName("dstKeyGroupBox")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.dstKeyGroupBox)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.dstKeyVLayout = QtWidgets.QVBoxLayout()
        self.dstKeyVLayout.setObjectName("dstKeyVLayout")
        self.dstKeyList = QtWidgets.QListWidget(self.dstKeyGroupBox)
        self.dstKeyList.setDragEnabled(True)
        self.dstKeyList.setObjectName("dstKeyList")
        self.dstKeyVLayout.addWidget(self.dstKeyList)
        self.dstKeyHLayout = QtWidgets.QHBoxLayout()
        self.dstKeyHLayout.setObjectName("dstKeyHLayout")
        self.addDstKeyButton = QtWidgets.QPushButton(self.dstKeyGroupBox)
        self.addDstKeyButton.setObjectName("addDstKeyButton")
        self.dstKeyHLayout.addWidget(self.addDstKeyButton)
        self.delDstKeyButton = QtWidgets.QPushButton(self.dstKeyGroupBox)
        self.delDstKeyButton.setObjectName("delDstKeyButton")
        self.dstKeyHLayout.addWidget(self.delDstKeyButton)
        self.dstKeyVLayout.addLayout(self.dstKeyHLayout)
        self.gridLayout_3.addLayout(self.dstKeyVLayout, 0, 0, 1, 1)
        self.horizontalLayout_2.addWidget(self.dstKeyGroupBox)
        self.dstDataGroupBox = QtWidgets.QGroupBox(self.dstGroupBox)
        self.dstDataGroupBox.setObjectName("dstDataGroupBox")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.dstDataGroupBox)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.dstDataVLayout = QtWidgets.QVBoxLayout()
        self.dstDataVLayout.setObjectName("dstDataVLayout")
        self.dstDataList = QtWidgets.QListWidget(self.dstDataGroupBox)
        self.dstDataList.setDragEnabled(True)
        self.dstDataList.setObjectName("dstDataList")
        self.dstDataVLayout.addWidget(self.dstDataList)
        self.dstDataHLayout = QtWidgets.QHBoxLayout()
        self.dstDataHLayout.setObjectName("dstDataHLayout")
        self.addDstDataButton = QtWidgets.QPushButton(self.dstDataGroupBox)
        self.addDstDataButton.setObjectName("addDstDataButton")
        self.dstDataHLayout.addWidget(self.addDstDataButton)
        self.delDstDataButton = QtWidgets.QPushButton(self.dstDataGroupBox)
        self.delDstDataButton.setObjectName("delDstDataButton")
        self.dstDataHLayout.addWidget(self.delDstDataButton)
        self.dstDataVLayout.addLayout(self.dstDataHLayout)
        self.gridLayout_4.addLayout(self.dstDataVLayout, 0, 0, 1, 1)
        self.horizontalLayout_2.addWidget(self.dstDataGroupBox)
        self.dialogLayout.addWidget(self.dstGroupBox)
        self.verticalLayout.addLayout(self.dialogLayout)
        self.formLayout = QtWidgets.QFormLayout()
        self.formLayout.setObjectName("formLayout")
        self.cellFormatLabel = QtWidgets.QLabel(MapConfig)
        self.cellFormatLabel.setObjectName("cellFormatLabel")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.cellFormatLabel)
        self.cellFormatLineEdit = QtWidgets.QLineEdit(MapConfig)
        self.cellFormatLineEdit.setObjectName("cellFormatLineEdit")
        self.formLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.cellFormatLineEdit)
        self.fallbackValueLabel = QtWidgets.QLabel(MapConfig)
        self.fallbackValueLabel.setObjectName("fallbackValueLabel")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.fallbackValueLabel)
        self.fallbackValueLineEdit = QtWidgets.QLineEdit(MapConfig)
        self.fallbackValueLineEdit.setObjectName("fallbackValueLineEdit")
        self.formLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.fallbackValueLineEdit)
        self.popeyesTemplateLabel = QtWidgets.QLabel(MapConfig)
        self.popeyesTemplateLabel.setObjectName("popeyesTemplateLabel")
        self.formLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.popeyesTemplateLabel)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.templateLineEdit = QtWidgets.QLineEdit(MapConfig)
        self.templateLineEdit.setObjectName("templateLineEdit")
        self.horizontalLayout_3.addWidget(self.templateLineEdit)
        self.browseTemplateFile = QtWidgets.QPushButton(MapConfig)
        self.browseTemplateFile.setObjectName("browseTemplateFile")
        self.horizontalLayout_3.addWidget(self.browseTemplateFile)
        self.formLayout.setLayout(2, QtWidgets.QFormLayout.FieldRole, self.horizontalLayout_3)
        self.preloadWorksheetLabel = QtWidgets.QLabel(MapConfig)
        self.preloadWorksheetLabel.setObjectName("preloadWorksheetLabel")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.LabelRole, self.preloadWorksheetLabel)
        self.preloadWorksheetLineEdit = QtWidgets.QLineEdit(MapConfig)
        self.preloadWorksheetLineEdit.setObjectName("preloadWorksheetLineEdit")
        self.formLayout.setWidget(3, QtWidgets.QFormLayout.FieldRole, self.preloadWorksheetLineEdit)
        self.verticalLayout.addLayout(self.formLayout)
        self.buttonBox = QtWidgets.QDialogButtonBox(MapConfig)
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.verticalLayout.addWidget(self.buttonBox)
        self.buttonBox.raise_()
        self.templateLineEdit.raise_()
        self.browseTemplateFile.raise_()
        self.templateLineEdit.raise_()

        self.retranslateUi(MapConfig)
        self.buttonBox.accepted.connect(MapConfig.accept)
        self.buttonBox.rejected.connect(MapConfig.reject)
        QtCore.QMetaObject.connectSlotsByName(MapConfig)

    def retranslateUi(self, MapConfig):
        _translate = QtCore.QCoreApplication.translate
        MapConfig.setWindowTitle(_translate("MapConfig", "Company Map Configuration"))
        self.srcGroupBox.setTitle(_translate("MapConfig", "QuickBooks Spreadsheet"))
        self.srcKeyGroupBox.setTitle(_translate("MapConfig", "Account Columns"))
        self.srcKeyList.setToolTip(_translate("MapConfig", "<html><head/><body><p>Account name column letters.</p></body></html>"))
        self.srcKeyList.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>For each row of the QuickBooks export, the converter will search each of the column letters listed here, in order, until a non-empty cell is found. The value found will be matched against the <span style=\" font-weight:600;\">Search Term</span> keyword.</p><p>This is usually <span style=\" font-weight:600;\">E</span>, <span style=\" font-weight:600;\">D</span>, and <span style=\" font-weight:600;\">C</span>, but depends on the version of QuickBooks used.</p></body></html>"))
        self.addSrcKeyButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Add account column letter.</p></body></html>"))
        self.addSrcKeyButton.setText(_translate("MapConfig", "+"))
        self.delSrcKeyButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Delete account column letter.</p></body></html>"))
        self.delSrcKeyButton.setText(_translate("MapConfig", "-"))
        self.sourceDataGroupBox.setTitle(_translate("MapConfig", "Restaurant Data Columns"))
        self.srcDataList.setToolTip(_translate("MapConfig", "<html><head/><body><p>Store data column letters.</p></body></html>"))
        self.srcDataList.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>For each row of the QuickBooks export, the converter will record each value of each column listed here, and move the values to the corresponding <span style=\" font-weight:600;\">Restaurant Data Columns</span> under the <span style=\" font-weight:600;\">Popeyes P&amp;L Template</span>. This should have the same number of column letters as <span style=\" font-weight:600;\">Restaurant Data Columns</span> under <span style=\" font-weight:600;\">Popeyes P&amp;L</span><span style=\" font-weight:600;\">Template</span>.</p><p>This is usually starts with column <span style=\" font-weight:600;\">H</span>, and each letter until (and excluding) the <span style=\" font-weight:600;\">TOTAL</span> column, but depends on the version of QuickBooks used.</p></body></html>"))
        self.addSrcDataButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Add store column letter.</p></body></html>"))
        self.addSrcDataButton.setText(_translate("MapConfig", "+"))
        self.delSrcDataButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Delete store data column.</p></body></html>"))
        self.delSrcDataButton.setText(_translate("MapConfig", "-"))
        self.dstGroupBox.setTitle(_translate("MapConfig", "Popeyes P&&L Template"))
        self.dstKeyGroupBox.setTitle(_translate("MapConfig", "Account Columns"))
        self.dstKeyList.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>For each row of the Popeyes P&amp;L spreadsheet, the converter will search each of the column letters listed here, in order, until a non-empty cell is found. The value found will be considered the <span style=\" font-weight:600;\">Row Name</span> in the map table data.</p><p>This is usually column <span style=\" font-weight:600;\">A</span>.</p></body></html>"))
        self.addDstKeyButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Add account column letter.</p></body></html>"))
        self.addDstKeyButton.setText(_translate("MapConfig", "+"))
        self.delDstKeyButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Delete account column letter.</p></body></html>"))
        self.delDstKeyButton.setText(_translate("MapConfig", "-"))
        self.dstDataGroupBox.setTitle(_translate("MapConfig", "Restaurant Data Columns"))
        self.dstDataList.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>For each row of the Popeyes P&amp;L spreadsheet, the converter will match take the corresponding data found from the QuickBooks export, in order, and place the value in each column listed here. This needs to be the same number of columns as listed in the <span style=\" font-weight:600;\">Restaurant Data Columns</span> under <span style=\" font-weight:600;\">QuickBooks Spreadsheet</span>.</p><p>This is usally columns <span style=\" font-weight:600;\">B</span>, <span style=\" font-weight:600;\">D</span>, <span style=\" font-weight:600;\">F</span>, and <span style=\" font-weight:600;\">H</span>, but depends on how many restaurants are listed on each spreadsheet.</p></body></html>"))
        self.addDstDataButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Add store column letter.</p></body></html>"))
        self.addDstDataButton.setText(_translate("MapConfig", "+"))
        self.delDstDataButton.setToolTip(_translate("MapConfig", "<html><head/><body><p>Delete store data column.</p></body></html>"))
        self.delDstDataButton.setText(_translate("MapConfig", "-"))
        self.cellFormatLabel.setToolTip(_translate("MapConfig", "<html><head/><body><p>Cell number format to give all data cells. (optional)</p></body></html>"))
        self.cellFormatLabel.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>Before assigning a number to a restaurant data cell in the Popeyes workbook, the converter will set the cell number to this custom format.</p><p>This field is optional.</p></body></html>"))
        self.cellFormatLabel.setText(_translate("MapConfig", "Cell Format"))
        self.fallbackValueLabel.setToolTip(_translate("MapConfig", "<html><head/><body><p>Value to use if a row could not be found.</p></body></html>"))
        self.fallbackValueLabel.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>If the converter cannot find a match for a row on the Popeyes spreadsheet, it will use this value instead.</p><p>This is usually just <span style=\" font-weight:600;\">0</span>.</p></body></html>"))
        self.fallbackValueLabel.setText(_translate("MapConfig", "Fallback Value"))
        self.popeyesTemplateLabel.setText(_translate("MapConfig", "Popeyes Template"))
        self.browseTemplateFile.setText(_translate("MapConfig", "Browse"))
        self.preloadWorksheetLabel.setToolTip(_translate("MapConfig", "<html><head/><body><p>Worksheet from which to preload row names.</p></body></html>"))
        self.preloadWorksheetLabel.setWhatsThis(_translate("MapConfig", "<html><head/><body><p>The editor will load row names from this worksheet when the map file is opened for editing.</p><p>Usually any labeled month worksheet will work here.</p></body></html>"))
        self.preloadWorksheetLabel.setText(_translate("MapConfig", "Preload Worksheet"))

